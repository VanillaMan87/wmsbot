#pragma config(Sensor, dgtl1,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  ultrasonicright, sensorSONAR_inch)
#pragma config(Motor,  port1,           forklift,      tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port2,           dfr,           tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           dfl,           tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,           mpincerl,      tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           mthrowerl,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,           mthrowerr,     tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port7,           mpincerr,      tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port8,           drr,           tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,           drl,           tmotorVex393_MC29, openLoop, reversed)

task driveForward()
{
	motor[dfl]=120;
	motor[dfr]=120;
	motor[drl]=120;
	motor[drr]=120;
}
task driveStop()
{
	motor[dfl]=0;
	motor[dfr]=0;
	motor[drl]=0;
	motor[drr]=0;
}
task autonomous()
{
  // ..........................................................................
  wait1Msec(2000);                 

  int distance = 1080; //Set distance to 0     
  
  int sValue = 0; //Track encoder Value
  while(sValue < distance)  //While encoder value is less than the set distance
  {
  	sValue = SensorValue[rightEncoder]; //Update tracking value to real-time encoder value
	startTask(driveForward); //Set all drive motors to forward
  }
  startTask(driveStop); //Stop all drive motors
  
  sValue = 0;
  if(SensorValue[rightSonar] > 12) //If the robot is on the left side
  {
    while(sValue < 1440) //While encoder value is less than 4 axle rotations
    {
    	sValue = SensorValue[rightEncoder]; //Update sValue to match real-time encoder value
	motor[dl]=120; //Turn right
	motor[dr]=-120;
    }
  }
  else if(SensorValue[rightSonar] <= 12) //If robot is one the right side
  {
	while(sValue < 1440) //While encoder value is less than 4 axle rotations
	{
	  sValue = SensorValue[rightEncoder] ; //Update tracking value to match real-time encoder value
	  motor[dl]=-120; //Turn left
          motor[dr]=120;
	}
  }
  startTask(driveStop); //Stop all drive motors
  motor[mpincerl]=0;
  motor[mpincerr]=0;
  
   while(sValue < distance) 
  {
  	sValue = SensorValue[rightEncoder] ;
	startTask(driveForward);
  }
	
  // ..........................................................................
}
